# -----------------------------------------------------------------------------------------------------------------------
# general configs
# -----------------------------------------------------------------------------------------------------------------------
server.port=8080
server.max-http-header-size=45000
spring.application.name=revealserver
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
batch.location=src/main/resources/batch/
batch.template=src/main/resources/template/
# -----------------------------------------------------------------------------------------------------------------------
# database configs
# -----------------------------------------------------------------------------------------------------------------------
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5500/revealserver
spring.datasource.username=postgres
#spring.datasource.password=XXXXXXXXXXXXXXXXXXXXXX
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jackson.time-zone=UTC
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=always
hibernate.types.print.banner=false
# -----------------------------------------------------------------------------------------------------------------------
# kafka configs
# -----------------------------------------------------------------------------------------------------------------------
spring.kafka.consumer.bootstrap-servers=kafka-01:29092,kafka-02:29093,kafka-03:29094
spring.kafka.consumer.group-id=reveal_server_group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers=kafka-01:29092,kafka-02:29093,kafka-03:29094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# -----------------------------------------------------------------------------------------------------------------------
# tracing configs
# -----------------------------------------------------------------------------------------------------------------------
spring.sleuth.sampler.probability=1.0
spring.zipkin.sender.type=kafka
# -----------------------------------------------------------------------------------------------------------------------
# keycloak configs
# -----------------------------------------------------------------------------------------------------------------------
keycloak.enabled=true
keycloak.auth-server-url=https://sso-ops.akros.online/auth
keycloak.realm=reveal
keycloak.resource=reveal-server
#keycloak.credentials.secret=XXXXXXXXXXXXXXXXXXXXXX
keycloak.public-client=false
keycloak.ssl-required=external
keycloak.use-resource-role-mappings=false
keycloak.bearer-only=true
keycloak.security-constraints[0].authRoles[0]=plan_view
keycloak.security-constraints[0].security-collections[0].methods[0]=GET
keycloak.security-constraints[0].security-collections[0].patterns[0]=/api/v1/plan
keycloak.security-constraints[0].security-collections[1].methods[0]=GET
keycloak.security-constraints[0].security-collections[1].patterns[0]=/api/v1/plan/{identifier}
keycloak.security-constraints[1].authRoles[0]=plan_view
keycloak.security-constraints[1].authRoles[1]=plan_create
keycloak.security-constraints[1].security-collections[0].methods[0]=POST
keycloak.security-constraints[1].security-collections[0].patterns[0]=/api/v1/plan
keycloak.security-constraints[2].authRoles[0]=plan_view
keycloak.security-constraints[2].authRoles[1]=plan_update
keycloak.security-constraints[2].security-collections[0].methods[0]=PUT
keycloak.security-constraints[2].security-collections[0].patterns[0]=/api/v1/plan/{identifier}
keycloak.security-constraints[3].authRoles[0]=plan_view
keycloak.security-constraints[3].authRoles[1]=plan_delete
keycloak.security-constraints[3].security-collections[0].methods[0]=DELETE
keycloak.security-constraints[3].security-collections[0].patterns[0]=/api/v1/plan/{identifier}
keycloak.security-constraints[4].authRoles[0]=task_view
keycloak.security-constraints[4].security-collections[0].methods[0]=GET
keycloak.security-constraints[4].security-collections[0].patterns[0]=/api/v1/task
keycloak.security-constraints[4].security-collections[1].methods[0]=GET
keycloak.security-constraints[4].security-collections[1].patterns[0]=/api/v1/task/{identifier}
keycloak.security-constraints[5].authRoles[0]=task_view
keycloak.security-constraints[5].authRoles[1]=task_create
keycloak.security-constraints[5].security-collections[0].methods[0]=POST
keycloak.security-constraints[5].security-collections[0].patterns[0]=/api/v1/task
keycloak.security-constraints[6].authRoles[0]=task_view
keycloak.security-constraints[6].authRoles[1]=task_update
keycloak.security-constraints[6].security-collections[0].methods[0]=PUT
keycloak.security-constraints[6].security-collections[0].patterns[0]=/api/v1/task/{identifier}
keycloak.security-constraints[7].authRoles[0]=task_view
keycloak.security-constraints[7].authRoles[1]=task_delete
keycloak.security-constraints[7].security-collections[0].methods[0]=DELETE
keycloak.security-constraints[7].security-collections[0].patterns[0]=/api/v1/task/{identifier}
keycloak.security-constraints[8].authRoles[0]=geographic_level_view
keycloak.security-constraints[8].security-collections[0].methods[0]=GET
keycloak.security-constraints[8].security-collections[0].patterns[0]=/api/v1/geographicLevel
keycloak.security-constraints[8].security-collections[1].methods[0]=GET
keycloak.security-constraints[8].security-collections[1].patterns[0]=/api/v1/geographicLevel/{identifier}
keycloak.security-constraints[9].authRoles[0]=geographic_level_view
keycloak.security-constraints[9].authRoles[1]=geographic_level_create
keycloak.security-constraints[9].security-collections[0].methods[0]=POST
keycloak.security-constraints[9].security-collections[0].patterns[0]=/api/v1/geographicLevel
keycloak.security-constraints[10].authRoles[0]=geographic_level_view
keycloak.security-constraints[10].authRoles[1]=geographic_level_update
keycloak.security-constraints[10].security-collections[0].methods[0]=PUT
keycloak.security-constraints[10].security-collections[0].patterns[0]=/api/v1/geographicLevel/{identifier}
keycloak.security-constraints[11].authRoles[0]=geographic_level_view
keycloak.security-constraints[11].authRoles[1]=geographic_level_delete
keycloak.security-constraints[11].security-collections[0].methods[0]=DELETE
keycloak.security-constraints[11].security-collections[0].patterns[0]=/api/v1/geographicLevel/{identifier}
# -----------------------------------------------------------------------------------------------------------------------
# cors configs
# -----------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------
# actuator configs
# -----------------------------------------------------------------------------------------------------------------------
management.endpoints.health.sensitive=false
management.endpoint.health.show-details=always
# -----------------------------------------------------------------------------------------------------------------------
# logging configs
# -----------------------------------------------------------------------------------------------------------------------
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.web.servlet.mvc.method.annotation=TRACE
logging.level.org.apache.kafka.clients=WARN
logging.level.org.keycloak=TRACE
# -----------------------------------------------------------------------------------------------------------------------
# SpringDoc: Swagger
# -----------------------------------------------------------------------------------------------------------------------
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.version=3.0.0
springdoc.swagger-ui.enabled=true
spring.main.allow-bean-definition-overriding=false
#------------------------------------------------------------------------------------------------------------------------
# Controller conditions
#------------------------------------------------------------------------------------------------------------------------
controller.utility.enable=false
# -----------------------------------------------------------------------------------------------------------------------
# JobRunr
# -----------------------------------------------------------------------------------------------------------------------
org.jobrunr.job-scheduler.enabled=true
org.jobrunr.background-job-server.enabled=true
org.jobrunr.dashboard.enabled=true
#org.jobrunr.database.skip_create=false
#org.jobrunr.database.table_prefix= # allows to set a table prefix (e.g. schema for all tables)
#org.jobrunr.database.datasource= # allows to specify a DataSource specifically for JobRunr
#org.jobrunr.background-job-server.worker_count= #this value normally is defined by the amount of CPU's that are available
#org.jobrunr.background-job-server.poll_interval=15 #check for new work every 15 seconds
#org.jobrunr.background-job-server.delete_succeeded_jobs_after=36 #succeeded jobs will go to the deleted state after 36 hours
#org.jobrunr.background-job-server.permanently_delete_deleted_jobs_after=72 #deleted jobs will be deleted permanently after 72 hours
#org.jobrunr.dashboard.port=8000 #the port on which to start the dashboard